package oracle.apps.xxon.om.gbw.popup.server;

import oracle.apps.fnd.framework.server.OAViewRowImpl;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XXONGbwOrderHoldDetailsVORowImpl extends OAViewRowImpl {
    public static final int LINEID = 0;
    public static final int HEADERID = 1;
    public static final int HOLDNAME = 2;
    public static final int HOLDRELEASEFLAG = 3;
    public static final int HOLDRELEASEREASON = 4;
    public static final int HOLDRELEASEDATE = 5;
    public static final int APPLIEDBY = 6;
    public static final int RELEASEDBY = 7;
    public static final int APPLIEDDATE = 8;

    /**This is the default constructor (do not remove)
     */
    public XXONGbwOrderHoldDetailsVORowImpl() {
    }

    /**Gets the attribute value for the calculated attribute LineId
     */
    public Number getLineId() {
        return (Number) getAttributeInternal(LINEID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute LineId
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**Gets the attribute value for the calculated attribute HeaderId
     */
    public Number getHeaderId() {
        return (Number) getAttributeInternal(HEADERID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute HeaderId
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**Gets the attribute value for the calculated attribute HoldName
     */
    public String getHoldName() {
        return (String) getAttributeInternal(HOLDNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute HoldName
     */
    public void setHoldName(String value) {
        setAttributeInternal(HOLDNAME, value);
    }

    /**Gets the attribute value for the calculated attribute HoldReleaseFlag
     */
    public String getHoldReleaseFlag() {
        return (String) getAttributeInternal(HOLDRELEASEFLAG);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute HoldReleaseFlag
     */
    public void setHoldReleaseFlag(String value) {
        setAttributeInternal(HOLDRELEASEFLAG, value);
    }

    /**Gets the attribute value for the calculated attribute HoldReleaseReason
     */
    public String getHoldReleaseReason() {
        return (String) getAttributeInternal(HOLDRELEASEREASON);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute HoldReleaseReason
     */
    public void setHoldReleaseReason(String value) {
        setAttributeInternal(HOLDRELEASEREASON, value);
    }

    /**Gets the attribute value for the calculated attribute HoldReleaseDate
     */
    public Date getHoldReleaseDate() {
        return (Date) getAttributeInternal(HOLDRELEASEDATE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute HoldReleaseDate
     */
    public void setHoldReleaseDate(Date value) {
        setAttributeInternal(HOLDRELEASEDATE, value);
    }

    /**Gets the attribute value for the calculated attribute AppliedBy
     */
    public String getAppliedBy() {
        return (String) getAttributeInternal(APPLIEDBY);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute AppliedBy
     */
    public void setAppliedBy(String value) {
        setAttributeInternal(APPLIEDBY, value);
    }

    /**Gets the attribute value for the calculated attribute ReleasedBy
     */
    public String getReleasedBy() {
        return (String) getAttributeInternal(RELEASEDBY);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ReleasedBy
     */
    public void setReleasedBy(String value) {
        setAttributeInternal(RELEASEDBY, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case LINEID:
            return getLineId();
        case HEADERID:
            return getHeaderId();
        case HOLDNAME:
            return getHoldName();
        case HOLDRELEASEFLAG:
            return getHoldReleaseFlag();
        case HOLDRELEASEREASON:
            return getHoldReleaseReason();
        case HOLDRELEASEDATE:
            return getHoldReleaseDate();
        case APPLIEDBY:
            return getAppliedBy();
        case RELEASEDBY:
            return getReleasedBy();
        case APPLIEDDATE:
            return getAppliedDate();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case LINEID:
            setLineId((Number)value);
            return;
        case HEADERID:
            setHeaderId((Number)value);
            return;
        case HOLDNAME:
            setHoldName((String)value);
            return;
        case HOLDRELEASEFLAG:
            setHoldReleaseFlag((String)value);
            return;
        case HOLDRELEASEREASON:
            setHoldReleaseReason((String)value);
            return;
        case HOLDRELEASEDATE:
            setHoldReleaseDate((Date)value);
            return;
        case APPLIEDBY:
            setAppliedBy((String)value);
            return;
        case RELEASEDBY:
            setReleasedBy((String)value);
            return;
        case APPLIEDDATE:
            setAppliedDate((Date)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the attribute value for the calculated attribute AppliedDate
     */
    public Date getAppliedDate() {
        return (Date) getAttributeInternal(APPLIEDDATE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute AppliedDate
     */
    public void setAppliedDate(Date value) {
        setAttributeInternal(APPLIEDDATE, value);
    }
}
