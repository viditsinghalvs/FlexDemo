package oracle.apps.xxon.om.gbw.shipord.server;

import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
import oracle.apps.xxon.om.gbw.baklogview.server.XXONGbwRecordsDisplayVOImpl;
import oracle.apps.xxon.om.gbw.baklogview.server.XXONGbwRecordsDisplayVORowImpl;
import oracle.apps.xxon.om.gbw.lov.server.XXONGbwCorpCodeLovVOImpl;
import oracle.apps.xxon.om.gbw.lov.server.XXONGbwCust5CodeLovVOImpl;
import oracle.apps.xxon.om.gbw.lov.server.XXONGbwOperatingUnitLovVOImpl;
import oracle.apps.xxon.om.gbw.lov.server.XXONGbwPackageLovVOImpl;
import oracle.apps.xxon.om.gbw.util.XXONGbwUtil;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XXONGbwShippedOrdersAMImpl extends OAApplicationModuleImpl {
    
    XXONGbwUtil utils= new XXONGbwUtil();
    public void executeSearch (String p_dateRange, 
                               String p_opn,
                               String p_orderNumber,
                               String p_pal,
                               String p_coi,
                               String p_pickReference,
                               String p_pkg,                              
                               String p_operatingUnit,
                               String p_corpCode,
                               String p_cust5Code,
                               String p_sampleOrderes,
                               String p_consumptionOrders,
                               String p_dateFrom,
                               String p_dateTo) {

        log("In executeSearch:\n  p_dateRange: "+p_dateRange+
                             "\n, p_opn: "+p_opn+
                             "\n, p_orderNumber: "+p_orderNumber+
                             "\n, p_pal: "+p_pal+
                             "\n, p_coi: "+p_coi+
                             "\n, p_pickReference: "+p_pickReference+
                             "\n, p_pkg: "+p_pkg+
                             "\n, p_operatingUnit: "+p_operatingUnit+
                             "\n, p_corpCode: "+p_corpCode+
                             "\n, p_cust5Code: "+p_cust5Code+
                             "\n, p_sampleOrderes: "+p_sampleOrderes+
                             "\n, p_consumptionOrders: "+p_consumptionOrders+
                             "\n, p_dateFrom: "+p_dateFrom+
                             "\n, p_dateTo: "+p_dateTo);
        if(p_pal!=null&&p_pal.trim().length()>0&&p_pal.contains("%"))
        {
           throw new OAException("XXON","XXON_OM_GBW_BLV_SEARCH_ERR1",null,OAException.ERROR,null);
        }
        XXONGbwShippedOrdersVOImpl XxonGbwShippedOrdersVO = getXXONGbwShippedOrdersVO1();
        XxonGbwShippedOrdersVO.setWhereClause(null);
        XxonGbwShippedOrdersVO.setWhereClauseParams(null);

        StringBuffer whereClause = new StringBuffer();
        java.util.List whereClauseParams = new java.util.ArrayList();
        int count = 0;
        whereClause.append("1 = 1");
        
        if (p_dateRange != null && p_dateRange.trim().length()>0)
        {
            whereClause.append(" and ACTUAL_SHIPMENT_DATE >= SYSDATE - to_number(trim(:");
            whereClause.append(++count);
            whereClause.append("))");            
            whereClauseParams.add(p_dateRange);
        }
        
        if (p_opn != null && p_opn.trim().length()>0) 
        {
         if(p_opn.contains("%"))
         {
            whereClause.append(" and OPN like trim(:");
            whereClause.append(++count);
            whereClause.append(")");            
            whereClauseParams.add(p_opn);
         }else{
             whereClause.append(" and OPN = trim(:");
             whereClause.append(++count);
             whereClause.append(")");            
             whereClauseParams.add(p_opn);
         }
        }
        
        if (p_orderNumber != null && p_orderNumber.trim().length()>0)
        {
          if(p_orderNumber.contains("%"))
          {
             whereClause.append(" and ORDER_NUMBER like trim(:");
             whereClause.append(++count);
             whereClause.append(")");               
             whereClauseParams.add(p_orderNumber);
          }else{
              whereClause.append(" and ORDER_NUMBER = trim(:");
              whereClause.append(++count);
              whereClause.append(")");               
              whereClauseParams.add(p_orderNumber);
          }
        } 
        
        if (p_pal != null && p_pal.trim().length()>0)
        {
            if(p_pal.trim().length()>3)
            {
                  whereClause.append(" and PAL = trim(:");
                  whereClause.append(++count);
                  whereClause.append(")");            
                  whereClauseParams.add(p_pal);
            }else if(p_pal.trim().length()==3)
            {
                  whereClause.append(" and SUBSTR(PAL,0,3) = trim(:");
                  whereClause.append(++count);
                  whereClause.append(")");            
                  whereClauseParams.add(p_pal);
            }else if(p_pal.trim().length()==2)
            {
                  whereClause.append(" and SUBSTR(PAL,0,2) = trim(:");
                  whereClause.append(++count);
                  whereClause.append(")");            
                  whereClauseParams.add(p_pal);
            }
        }
        
        if (p_coi != null && p_coi.trim().length()>0)
        {
         if(p_coi.contains("%"))
         {
            whereClause.append(" and COI like trim(:");
            whereClause.append(++count);
            whereClause.append(")");            
            whereClauseParams.add(p_coi);
         }else{
             whereClause.append(" and COI = trim(:");
             whereClause.append(++count);
             whereClause.append(")");            
             whereClauseParams.add(p_coi);
         }
        }
        
        if (p_pickReference != null && p_pickReference.trim().length()>0) 
        {
         if(p_pickReference.contains("%"))
         {
            whereClause.append(" and PICK_REFERENCE like trim(:");
            whereClause.append(++count);
            whereClause.append(")");            
            whereClauseParams.add(p_pickReference);
         }else{
             whereClause.append(" and PICK_REFERENCE = trim(:");
             whereClause.append(++count);
             whereClause.append(")");            
             whereClauseParams.add(p_pickReference);
         }
        }
        
        if (p_pkg != null && p_pkg.trim().length()>0) 
        {
         if(p_pkg.contains("%"))
         {
            whereClause.append(" and PACKAGE_DESC like trim(:");
            whereClause.append(++count);
            whereClause.append(")");            
            whereClauseParams.add(p_pkg);
         }else{
             whereClause.append(" and PACKAGE_DESC = trim(:");
             whereClause.append(++count);
             whereClause.append(")");            
             whereClauseParams.add(p_pkg);
         }
        }
        
        if (p_operatingUnit != null && p_operatingUnit.trim().length()>0)
        {
        if(p_operatingUnit.contains("%"))
        {
            whereClause.append(" and ORGANIZATION_ID like trim(:");
            whereClause.append(++count);
            whereClause.append(")");            
            whereClauseParams.add(p_operatingUnit);
        }else{
            whereClause.append(" and ORGANIZATION_ID = trim(:");
            whereClause.append(++count);
            whereClause.append(")");            
            whereClauseParams.add(p_operatingUnit);
        }
        }
        
        if (p_corpCode != null && p_corpCode.trim().length()>0) 
        {
            if(p_corpCode.contains("%"))
            {
                whereClause.append(" and CORP_CODE like trim(:");
                whereClause.append(++count);
                whereClause.append(")");            
                whereClauseParams.add(p_corpCode);
            }else{
                whereClause.append(" and CORP_CODE = trim(:");
                whereClause.append(++count);
                whereClause.append(")");            
                whereClauseParams.add(p_corpCode);
            }
        }
        if (p_cust5Code != null && p_cust5Code.trim().length()>0) 
        {
         if(p_cust5Code.contains("%"))
         {
            whereClause.append(" and CUST5_CODE like trim(:");
            whereClause.append(++count);
            whereClause.append(")");            
            whereClauseParams.add(p_cust5Code);
         }else{
             whereClause.append(" and CUST5_CODE = trim(:");
             whereClause.append(++count);
             whereClause.append(")");            
             whereClauseParams.add(p_cust5Code);
         }
        }
        
        if(p_sampleOrderes!=null && p_sampleOrderes.equals("Y") && p_consumptionOrders!=null && p_consumptionOrders.equals("Y")  )
        {
           whereClause.append(" and ( ORDER_TYPE='Samples' or ORDER_TYPE= 'Consumption Order')");
        }else if (p_sampleOrderes!=null && p_sampleOrderes.equals("Y")) 
        {
           whereClause.append(" and ORDER_TYPE='Samples' ");
        }else if (p_consumptionOrders!=null && p_consumptionOrders.equals("Y"))
        {
           whereClause.append(" and ORDER_TYPE= 'Consumption Order'");
        }
        
        if ((p_dateFrom != null) && (p_dateTo != null) && (p_dateFrom.trim().length()>0) && (p_dateTo.trim().length()>0))
        {
            whereClause.append(" and TRUNC(ACTUAL_SHIPMENT_DATE) between to_date(:");
            whereClause.append(++count);
            whereClause.append(",'RRRR-MM-DD') and to_date(:");            
            whereClauseParams.add(p_dateFrom);
            whereClause.append(++count);
            whereClause.append(",'RRRR-MM-DD')");            
            whereClauseParams.add(p_dateTo);
        } else if ((p_dateFrom != null) && (p_dateFrom.trim().length()>0)) {
            whereClause.append(" and TRUNC(ACTUAL_SHIPMENT_DATE) >= to_date(:");
            whereClause.append(++count);
            whereClause.append(",'RRRR-MM-DD')");            
            whereClauseParams.add(p_dateFrom);
        } else if ((p_dateTo != null) && (p_dateTo.trim().length()>0)) {
            whereClause.append(" and TRUNC(ACTUAL_SHIPMENT_DATE) <= to_date(:");
            whereClause.append(++count);
            whereClause.append(",'RRRR-MM-DD')");            
            whereClauseParams.add(p_dateTo);
        }
        
            if(count==1&&(p_dateRange!=null&&p_dateRange.trim().length()>0))
            {
                //throw new OAException("Date Range + one aditional parameter is required to perform serach.",OAException.ERROR);
                throw new OAException("XXON","XXON_OM_GBW_BLV_SEARCH_ERR17",null,OAException.ERROR,null);
            }
             if (count==2&&(p_dateFrom != null) && (p_dateTo != null) && (p_dateFrom.trim().length()>0) && (p_dateTo.trim().length()>0))
             {
                 //throw new OAException("Ship Dates + one aditional parameter is required to perform serach.",OAException.ERROR);
                 throw new OAException("XXON","XXON_OM_GBW_BLV_SEARCH_ERR18",null,OAException.ERROR,null);
            }

        XxonGbwShippedOrdersVO.setWhereClause(whereClause.toString());
        XxonGbwShippedOrdersVO.setWhereClauseParams(whereClauseParams.toArray());
        XxonGbwShippedOrdersVO.executeQuery();
        utils.showMaxFecthSizeWarningMsg(getOADBTransaction(),"XXONGbwShippedOrdersVO1");
        log("Query:"+XxonGbwShippedOrdersVO.getQuery());
        log("XxonGbwShippedOrdersVO RowCount:"+XxonGbwShippedOrdersVO.getRowCount());        
        XxonGbwShippedOrdersVO.setRangeStart(0);
        XXONGbwRecordsDisplayVOImpl recordsDisplayVO=getXXONGbwRecordsDisplayVO1();
        XXONGbwRecordsDisplayVORowImpl row1=(XXONGbwRecordsDisplayVORowImpl)recordsDisplayVO.first();
        row1.setAttribute("recCount",XxonGbwShippedOrdersVO.getRowCount()+" Record(s) found.");

    }
    
    public void recDisInit()
    {
        XXONGbwRecordsDisplayVOImpl recordsDisplayVO=getXXONGbwRecordsDisplayVO1();
        if(!recordsDisplayVO.isExecuted())
        {
            recordsDisplayVO.executeQuery();
        }
    
    }
    /**
    *  Print Log Messages
    * @param message
    */
    private void log(String message)
    {
    System.out.println(message);
     if(getOADBTransaction().isLoggingEnabled(1))
     {
      getOADBTransaction().writeDiagnostics(this,message,1);
     }
    }
    
    
    /**This is the default constructor (do not remove)
     */
    public XXONGbwShippedOrdersAMImpl() {
    }


    /**Container's getter for XXONGbwCorpCodeLovVO1
     */
    public XXONGbwCorpCodeLovVOImpl getXXONGbwCorpCodeLovVO1() {
        return (XXONGbwCorpCodeLovVOImpl)findViewObject("XXONGbwCorpCodeLovVO1");
    }

    /**Container's getter for XXONGbwCust5CodeLovVO1
     */
    public XXONGbwCust5CodeLovVOImpl getXXONGbwCust5CodeLovVO1() {
        return (XXONGbwCust5CodeLovVOImpl)findViewObject("XXONGbwCust5CodeLovVO1");
    }

    /**Container's getter for XXONGbwOperatingUnitLovVO1
     */
    public XXONGbwOperatingUnitLovVOImpl getXXONGbwOperatingUnitLovVO1() {
        return (XXONGbwOperatingUnitLovVOImpl)findViewObject("XXONGbwOperatingUnitLovVO1");
    }

    /**Sample main for debugging Business Components code using the tester.
     */
    public static void main(String[] args) {
        launchTester("oracle.apps.xxon.om.gbw.shipord.server", /* package name */
      "XXONGbwShippedOrdersAMLocal" /* Configuration Name */);
    }

    /**Container's getter for XXONGbwDateRangeVO1
     */
    public XXONGbwDateRangeVOImpl getXXONGbwDateRangeVO1() {
        return (XXONGbwDateRangeVOImpl)findViewObject("XXONGbwDateRangeVO1");
    }

    /**Container's getter for XXONGbwShippedOrdersVO1
     */
    public XXONGbwShippedOrdersVOImpl getXXONGbwShippedOrdersVO1() {
        return (XXONGbwShippedOrdersVOImpl)findViewObject("XXONGbwShippedOrdersVO1");
    }

    /**Container's getter for XXONGbwRecordsDisplayVO1
     */
    public XXONGbwRecordsDisplayVOImpl getXXONGbwRecordsDisplayVO1() {
        return (XXONGbwRecordsDisplayVOImpl)findViewObject("XXONGbwRecordsDisplayVO1");
    }

    /**Container's getter for XXONGbwPackageLovVO1
     */
    public XXONGbwPackageLovVOImpl getXXONGbwPackageLovVO1() {
        return (XXONGbwPackageLovVOImpl)findViewObject("XXONGbwPackageLovVO1");
    }
}
